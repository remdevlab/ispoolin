apply plugin: 'java-library'
apply plugin: 'kotlin'
setVersion(project.ispoolineLibrary)

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}


sourceCompatibility = "8"
targetCompatibility = "8"
buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

static def getArtifactName() {
    return "ispoolin"
}

apply plugin: 'maven'

configurations {
    mavenWagons
}

dependencies {
    mavenWagons 'org.springframework.build:aws-maven:5.0.0.RELEASE'
}

def isReleaseBuild() {
    return getVersion().contains("SNAPSHOT") == false
}


def getDestUrl() {
    if (isReleaseBuild()) {
        return OWN_MAVEN_SERVER_URL
    } else {
        return OWN_MAVEN_SERVER_URL
    }
}

uploadArchives {

    repositories.mavenDeployer {
        configuration = configurations.mavenWagons
        repository(url: getDestUrl())
                {
                    authentication(userName: OWN_MAVEN_SERVER_LOGIN, password: OWN_MAVEN_SERVER_PASSWORD)
                }
        pom.project {
            groupId GROUP
            artifactId getArtifactName()
            version getVersion()
            name POM_NAME
            packaging JAR_POM_PACKAGING
            description POM_DESCRIPTION
        }
    }
}
